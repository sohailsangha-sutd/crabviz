/* background */

html {
  width: 100%;
  height: 100%;
}

body {
  width: 100%;
  height: 100%;
  padding: 0;
}

/* set height, change px to %*/

body,
svg {
  width: 100%;
  height: calc(100vh - (var(--toolbar-height) + var(--title-height)));
  background-color: var(--background-color);
}
#graph0 > polygon:first-of-type {
  fill: var(--background-color);
}

/* pointer */

.edge,
.cell.clickable {
  cursor: pointer;
}
.cell {
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Cell */

/* background */
.cell > :is(polygon, path):first-of-type {
  fill: var(--node-color);
}
/* border */
.cell > :is(polygon, path):last-of-type {
  stroke-width: 1.13pt;
}

.cell.clickable:not(.selected):not(:has(.clickable:hover)):hover > :is(polygon, path):first-of-type {
  fill: var(--cell-hover-color);
}
.cell.selected > :is(polygon, path):first-of-type {
  fill: var(--cell-selected-color);
}
.cell.highlight > path:last-of-type {
  stroke-dasharray: 10, 3, 5, 3;
}

/* Edge */

.edge > path {
  stroke: var(--edge-color);
  stroke-width: 3;
}
.edge > polygon {
  stroke: var(--edge-color);
  fill: var(--edge-color);
}

.edge:hover > path:not(.hover-path) {
  stroke: var(--edge-hover-color);
}
.edge:hover > polygon {
  stroke: var(--edge-hover-color);
  fill: var(--edge-hover-color);
}

.edge > path.hover-path {
  stroke: transparent;
  stroke-width: 15;
}

.impl > path {
  stroke-dasharray: 8, 3;
}
.impl > polygon {
  stroke-width: 2;
  fill: none !important;
}

.incoming > path:not(.hover-path) {
  stroke: var(--edge-incoming-color);
}
.incoming > polygon {
  stroke: var(--edge-incoming-color);
  fill: var(--edge-incoming-color);
}

.outgoing > path:not(.hover-path) {
  stroke: var(--edge-outgoing-color);
}
.outgoing > polygon {
  stroke: var(--edge-outgoing-color);
  fill: var(--edge-outgoing-color);
}

.incoming.outgoing > path:not(.hover-path) {
  stroke: var(--edge-recursive-color);
}
.incoming.outgoing > polygon {
  stroke: var(--edge-recursive-color);
  fill: var(--edge-recursive-color);
}

/* Node */

.node > path:first-of-type {
  fill: var(--node-color);
  filter: url(#shadow);
}
.node > polygon {
  stroke: var(--node-content-color);
}
.node text {
  fill: var(--node-content-color);
}

.node.selected > path:first-of-type {
  stroke: var(--node-highlight-color);
  stroke-width: 2.25pt;
}

.title text {
  font-weight: 500;
}

/* selection fade */
.fade {
  opacity: 0.05;
}

/* symbols */

.module > :is(path, polygon):first-of-type {
  fill: var(--module-color);
}

.interface > :is(path, polygon):first-of-type {
  fill: var(--interface-color);
}
.interface > :is(path, polygon):last-of-type {
  stroke: black;
  stroke-width: 1.13pt;
  stroke-dasharray: 5, 3;
}

.type > :is(path, polygon):first-of-type {
  fill: var(--type-color);
}
.type > text {
  transform: translateY(1px);
}
.type > text:first-of-type {
  fill: var(--icon-color);
}

.constructor:not(.selected) > :is(path, polygon):first-of-type {
  fill: var(--constructor-color);
}
.function:not(.selected) > :is(path, polygon):first-of-type {
  fill: var(--function-color);
}
.method:not(.selected) > :is(path, polygon):first-of-type {
  fill: var(--method-color);
}

:is(.field, .property) > text:first-of-type {
  font-weight: unset;
  font-style: italic;
  fill: var(--icon-color);
}

.export-button {
  position: absolute;
  top: 10px;
  right: 10px;
  padding: 5px 10px;
  background-color: var(--button-background-color);
  color: var(--button-text-color);
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.main-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.carbviz-title{
  position: relative;
  top: 10px;
  left: 10px;
  font-size: 24px;
  font-weight: bold;
  height: var(--title-height);
}

.carbviz-toolbar {
  position: relative;
  top: 10px;
  left: 10px;
  display: flex;
  gap: 10px;
  align-items: center;
  height: var(--toolbar-height);
}